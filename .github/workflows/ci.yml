name: CI

on:
  pull_request:
  push:
    branches: ['master']
  schedule:
  - cron: '00 01 * * *'

jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: docker build .
      working-directory: ./.devcontainer/

  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - run: dotnet build src/Pfim/Pfim.csproj
    - run: dotnet build src/Pfim.ImageSharp/Pfim.ImageSharp.csproj
    - run: dotnet build src/Pfim.Skia/Pfim.Skia.csproj
    - run: dotnet build src/Pfim.MonoGame/Pfim.MonoGame.csproj
    - run: dotnet test --collect 'Code coverage' ./tests/Pfim.Tests
      if: matrix.os == 'windows-latest'
    - run: dotnet test ./tests/Pfim.Tests
      if: matrix.os == 'ubuntu-latest'

  netframework:
    name: netframework
    runs-on: 'windows-latest'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: dotnet build src/Pfim/Pfim.csproj
    - run: dotnet build src/Pfim.Benchmarks/Pfim.Benchmarks.csproj
    - run: dotnet build src/Pfim.Viewer.Forms/Pfim.Viewer.Forms.csproj
    - run: dotnet build src/Pfim.Viewer/Pfim.Viewer.csproj
    - run: |
        dotnet run -c Release --project ./src/Pfim.Benchmarks -- --filter * --job Dry
        $SEL = Select-String -Path ./BenchmarkDotNet.Artifacts/*.log -Pattern "Benchmarks with issues"
        if ($SEL -ne $null)
        {
          exit 1
        }
